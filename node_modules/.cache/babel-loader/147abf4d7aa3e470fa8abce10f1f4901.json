{"ast":null,"code":"var _jsxFileName = \"/Users/bingnanli/Desktop/code/chat-app/client/src/pages/ChatsList/ChatsList.js\",\n    _s = $RefreshSig$();\n\nimport Chat from \"../../components/Chat\";\nimport useChatPage from \"../ChatPage/useChatPage\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { socket } from \"../../utilities/socker\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatsList = props => {\n  _s();\n\n  const {\n    chats,\n    friendAccount,\n    enterFriendAccount,\n    addFriend,\n    setChats\n  } = useChatPage();\n  const {\n    auth\n  } = useAuth();\n  useEffect(() => {\n    socket.once(\"connection\", () => {});\n    socket.emit(\"setup\", auth.userId);\n    socket.on(\"receive message\", _ref => {\n      let {\n        chatId,\n        sender,\n        content\n      } = _ref;\n\n      if (chats && content) {\n        let newChats = [...chats];\n        newChats.forEach(chat => chat._id === chatId ? (chat.latestMessage = content, chat.isNewMessage = true) : (chat.latestMessage = chat.latestMessage, chat.isNewMessage = false));\n        setChats(newChats);\n      }\n    });\n  }, [chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col items-center bg-slate-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-3 w-4/5 h-8 flex  bg-white rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: enterFriendAccount,\n        className: \"p-1 grow-[2] bg-white rounded-lg rounded-lg focus:outline-none\",\n        type: \"search\",\n        value: friendAccount,\n        onKeyDown: e => e.key === \"Enter\" ? () => addFriend(friendAccount) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex item-center justify-center rounded-lg p-3 bg-blue-500 hover:bg-blue-400 text-white text-xs\",\n        onClick: () => addFriend(friendAccount),\n        children: /*#__PURE__*/_jsxDEV(AiOutlineSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), chats ? chats.map(c => /*#__PURE__*/_jsxDEV(Chat, {\n      chatId: c._id,\n      takerId: c.users.filter(u => u._id !== auth.userId)[0]._id,\n      receiver: c.users.filter(u => u._id !== auth.userId)[0].account,\n      callBack: props.callBack,\n      latestMessage: c.latestMessage,\n      latestUpdate: c.updatedAt,\n      isNewMessage: c.isNewMessage\n    }, c._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatsList, \"tE27R5KDbIsiFh9BMP1zSJd0pCg=\", false, function () {\n  return [useChatPage, useAuth];\n});\n\n_c = ChatsList;\nexport default ChatsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatsList\");","map":{"version":3,"sources":["/Users/bingnanli/Desktop/code/chat-app/client/src/pages/ChatsList/ChatsList.js"],"names":["Chat","useChatPage","useAuth","socket","AiOutlineSearch","useEffect","ChatsList","props","chats","friendAccount","enterFriendAccount","addFriend","setChats","auth","once","emit","userId","on","chatId","sender","content","newChats","forEach","chat","_id","latestMessage","isNewMessage","e","key","map","c","users","filter","u","account","callBack","updatedAt"],"mappings":"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","sourcesContent":["import Chat from \"../../components/Chat\";\nimport useChatPage from \"../ChatPage/useChatPage\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { socket } from \"../../utilities/socker\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { useEffect } from \"react\";\n\nconst ChatsList = (props) => {\n  const { chats, friendAccount, enterFriendAccount, addFriend, setChats } =\n    useChatPage();\n  const { auth } = useAuth();\n\n  useEffect(() => {\n    socket.once(\"connection\", () => {});\n\n    socket.emit(\"setup\", auth.userId);\n    socket.on(\"receive message\", ({ chatId, sender, content }) => {\n      if (chats && content) {\n        let newChats = [...chats];\n\n        newChats.forEach((chat) =>\n          chat._id === chatId\n            ? ((chat.latestMessage = content), (chat.isNewMessage = true))\n            : ((chat.latestMessage = chat.latestMessage),\n              (chat.isNewMessage = false))\n        );\n\n        setChats(newChats);\n      }\n    });\n  }, [chats]);\n\n  return (\n    <div className=\"h-full flex flex-col items-center bg-slate-100\">\n      <div className=\"text-center my-3 w-4/5 h-8 flex  bg-white rounded-lg\">\n        <input\n          onChange={enterFriendAccount}\n          className=\"p-1 grow-[2] bg-white rounded-lg rounded-lg focus:outline-none\"\n          type=\"search\"\n          value={friendAccount}\n          onKeyDown={(e) =>\n            e.key === \"Enter\" ? () => addFriend(friendAccount) : null\n          }\n        />\n        <button\n          className=\"flex item-center justify-center rounded-lg p-3 bg-blue-500 hover:bg-blue-400 text-white text-xs\"\n          onClick={() => addFriend(friendAccount)}\n        >\n          <AiOutlineSearch />\n        </button>\n      </div>\n\n      {chats ? (\n        chats.map((c) => (\n          <Chat\n            key={c._id}\n            chatId={c._id}\n            takerId={c.users.filter((u) => u._id !== auth.userId)[0]._id}\n            receiver={c.users.filter((u) => u._id !== auth.userId)[0].account}\n            callBack={props.callBack}\n            latestMessage={c.latestMessage}\n            latestUpdate={c.updatedAt}\n            isNewMessage={c.isNewMessage}\n          />\n        ))\n      ) : (\n        <p>loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ChatsList;\n"]},"metadata":{},"sourceType":"module"}