{"ast":null,"code":"var _jsxFileName = \"/Users/bingnanli/Desktop/code/chat-app/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({}); // useAuth hook, return login, logout method, as well as auth that keep login state\n\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [auth, setAuth] = useState({\n    isLoggedIn: false,\n    userId: null,\n    token: null\n  });\n\n  const login = (userId, token) => {\n    setAuth({\n      isLoggedIn: true,\n      userId: userId,\n      token: token\n    });\n  };\n\n  const logout = () => {\n    setAuth({\n      isLoggedIn: false,\n      userId: null,\n      token: null\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"Y5uH3tpckbdB6ICNCb4JI0ia8A0=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/bingnanli/Desktop/code/chat-app/client/src/context/AuthContext.js"],"names":["createContext","useState","useContext","AuthContext","useAuth","AuthProvider","children","auth","setAuth","isLoggedIn","userId","token","login","logout"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC,C,CAEP;;AACA,OAAO,MAAMI,OAAO,GAAG;AAAA;;AAAA,SAAMF,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAhB;;GAAMC,O;;AAEb,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,UAAU,EAAE,KADmB;AAE/BC,IAAAA,MAAM,EAAE,IAFuB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;;AAMA,QAAMC,KAAK,GAAG,CAACF,MAAD,EAASC,KAAT,KAAmB;AAC/BH,IAAAA,OAAO,CAAC;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,MAAM,EAAEA,MAFF;AAGNC,MAAAA,KAAK,EAAEA;AAHD,KAAD,CAAP;AAKD,GAND;;AAQA,QAAME,MAAM,GAAG,MAAM;AACnBL,IAAAA,OAAO,CAAC;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAAD,CAAP;AAKD,GAND;;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useContext } from \"react\";\n\nexport const AuthContext = createContext({});\n\n// useAuth hook, return login, logout method, as well as auth that keep login state\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n  });\n\n  const login = (userId, token) => {\n    setAuth({\n      isLoggedIn: true,\n      userId: userId,\n      token: token,\n    });\n  };\n\n  const logout = () => {\n    setAuth({\n      isLoggedIn: false,\n      userId: null,\n      token: null,\n    });\n  };\n  return (\n    <AuthContext.Provider value={{ auth, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}