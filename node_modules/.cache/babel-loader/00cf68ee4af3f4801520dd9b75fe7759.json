{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // export isMobile, boolean: current on mobile screen or not\n\nconst useScreenWidth = () => {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const handleWindowSizeChange = () => setWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n  const isMobile = width <= 768;\n  return {\n    isMobile\n  };\n};\n\n_s(useScreenWidth, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");\n\nexport default useScreenWidth;","map":{"version":3,"sources":["/Users/bingnanli/Desktop/code/chat-app/client/src/hooks/useScreenWidth.js"],"names":["useEffect","useState","useScreenWidth","width","setWidth","window","innerWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAACI,MAAM,CAACC,UAAR,CAAlC;;AAEA,QAAMC,sBAAsB,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,UAAR,CAA7C;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,sBAAlC;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,sBAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,QAAMG,QAAQ,GAAGP,KAAK,IAAI,GAA1B;AACA,SAAO;AAAEO,IAAAA;AAAF,GAAP;AACD,CAbD;;GAAMR,c;;AAeN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\n// export isMobile, boolean: current on mobile screen or not\nconst useScreenWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const handleWindowSizeChange = () => setWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n  const isMobile = width <= 768;\n  return { isMobile };\n};\n\nexport default useScreenWidth;\n"]},"metadata":{},"sourceType":"module"}